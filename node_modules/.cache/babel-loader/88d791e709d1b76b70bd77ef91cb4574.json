{"remainingRequest":"/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/babel-loader/lib/index.js!/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/vue-meta/ssr/index.js","dependencies":[{"path":"/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/vue-meta/ssr/index.js","mtime":499162500000},{"path":"/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/cache-loader/dist/cjs.js","mtime":1641220182345},{"path":"/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/babel-loader/lib/index.js","mtime":1641220181976}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2hhcnJ5L0Rlc2t0b3AvVnVlanMgUHJvamVjdC9hbC1oYWdlZ2EudjAuMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuZW5kcy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwoKLyoqCiAqIHZ1ZS1tZXRhIHYzLjAuMC1hbHBoYS45CiAqIChjKSAyMDIxCiAqIC0gUGltIChAcGltbGllKQogKiAtIEFsbCB0aGUgYW1hemluZyBjb250cmlidXRvcnMKICogQGxpY2Vuc2UgTUlUCiAqLwpmdW5jdGlvbiByZW5kZXJNZXRhVG9TdHJpbmcoX3gpIHsKICByZXR1cm4gX3JlbmRlck1ldGFUb1N0cmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfcmVuZGVyTWV0YVRvU3RyaW5nKCkgewogIF9yZW5kZXJNZXRhVG9TdHJpbmcgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoYXBwKSB7CiAgICB2YXIgY3R4LAogICAgICAgIF9hcHAkY29uZmlnJGdsb2JhbFBybywKICAgICAgICBfeWllbGQkaW1wb3J0LAogICAgICAgIHJlbmRlclRvU3RyaW5nLAogICAgICAgIF90ZWxlcG9ydHMsCiAgICAgICAgdGVsZXBvcnRzLAogICAgICAgIHRhcmdldCwKICAgICAgICBzdHIsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjdHggPSBfYXJncy5sZW5ndGggPiAxICYmIF9hcmdzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnc1sxXSA6IHt9OwoKICAgICAgICAgICAgaWYgKCEoIWN0eC50ZWxlcG9ydHMgfHwgIWN0eC50ZWxlcG9ydHMuaGVhZCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBpbXBvcnQoJ0B2dWUvc2VydmVyLXJlbmRlcmVyJyk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBfeWllbGQkaW1wb3J0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmVuZGVyVG9TdHJpbmcgPSBfeWllbGQkaW1wb3J0LnJlbmRlclRvU3RyaW5nOwogICAgICAgICAgICBfdGVsZXBvcnRzID0gKF9hcHAkY29uZmlnJGdsb2JhbFBybyA9IGFwcC5jb25maWcuZ2xvYmFsUHJvcGVydGllcy4kbWV0YU1hbmFnZXIpID09PSBudWxsIHx8IF9hcHAkY29uZmlnJGdsb2JhbFBybyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FwcCRjb25maWckZ2xvYmFsUHJvLnJlbmRlcigpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKF90ZWxlcG9ydHMubWFwKGZ1bmN0aW9uICh0ZWxlcG9ydCkgewogICAgICAgICAgICAgIHJldHVybiByZW5kZXJUb1N0cmluZyh0ZWxlcG9ydCwgY3R4KTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgdGVsZXBvcnRzID0gY3R4LnRlbGVwb3J0czsKCiAgICAgICAgICAgIGZvciAodGFyZ2V0IGluIHRlbGVwb3J0cykgewogICAgICAgICAgICAgIGlmICh0YXJnZXQuZW5kc1dpdGgoJ0F0dHJzJykpIHsKICAgICAgICAgICAgICAgIHN0ciA9IHRlbGVwb3J0c1t0YXJnZXRdOyAvLyBtYXRjaCBmcm9tIGZpcnN0IHNwYWNlIHRvIGZpcnN0ID4sIHRoZXNlIHNob3VsZCBiZSBhbGwgcmVuZGVyZWQgYXR0cmlidXRlcwoKICAgICAgICAgICAgICAgIHRlbGVwb3J0c1t0YXJnZXRdID0gc3RyLnNsaWNlKHN0ci5pbmRleE9mKCcgJykgKyAxLCBzdHIuaW5kZXhPZignPicpKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGN0eCk7CgogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9yZW5kZXJNZXRhVG9TdHJpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IHsgcmVuZGVyTWV0YVRvU3RyaW5nIH07"},{"version":3,"sources":["/home/harry/Desktop/Vuejs Project/al-hagega.v0.1/node_modules/vue-meta/ssr/index.js"],"names":["renderMetaToString","app","ctx","teleports","head","renderToString","config","globalProperties","$metaManager","render","Promise","all","map","teleport","target","endsWith","str","slice","indexOf"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;SAEeA,kB;;;;;gFAAf,iBAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuCC,YAAAA,GAAvC,2DAA6C,EAA7C;;AAAA,kBAEQ,CAACA,GAAG,CAACC,SAAL,IAAkB,CAACD,GAAG,CAACC,SAAJ,CAAcC,IAFzC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGyC,OAAO,sBAAP,CAHzC;;AAAA;AAAA;AAGgBC,YAAAA,cAHhB,iBAGgBA,cAHhB;AAIcF,YAAAA,UAJd,4BAI0BF,GAAG,CAACK,MAAJ,CAAWC,gBAAX,CAA4BC,YAJtD,0DAI0B,sBAA0CC,MAA1C,EAJ1B;AAAA;AAAA,mBAKcC,OAAO,CAACC,GAAR,CAAYR,UAAS,CAACS,GAAV,CAAc,UAACC,QAAD;AAAA,qBAAcR,cAAc,CAACQ,QAAD,EAAWX,GAAX,CAA5B;AAAA,aAAd,CAAZ,CALd;;AAAA;AAOYC,YAAAA,SAPZ,GAO0BD,GAP1B,CAOYC,SAPZ;;AAQI,iBAAWW,MAAX,IAAqBX,SAArB,EAAgC;AAC5B,kBAAIW,MAAM,CAACC,QAAP,CAAgB,OAAhB,CAAJ,EAA8B;AACpBC,gBAAAA,GADoB,GACdb,SAAS,CAACW,MAAD,CADK,EAE1B;;AACAX,gBAAAA,SAAS,CAACW,MAAD,CAAT,GAAoBE,GAAG,CAACC,KAAJ,CAAUD,GAAG,CAACE,OAAJ,CAAY,GAAZ,IAAmB,CAA7B,EAAgCF,GAAG,CAACE,OAAJ,CAAY,GAAZ,CAAhC,CAApB;AACH;AACJ;;AAdL,6CAeWhB,GAfX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,SAASF,kBAAT","sourcesContent":["/**\n * vue-meta v3.0.0-alpha.9\n * (c) 2021\n * - Pim (@pimlie)\n * - All the amazing contributors\n * @license MIT\n */\n\nasync function renderMetaToString(app, ctx = {}) {\r\n    // TODO: better way of determining whether meta was rendered with the component or not\r\n    if (!ctx.teleports || !ctx.teleports.head) {\r\n        const { renderToString } = await import('@vue/server-renderer');\r\n        const teleports = app.config.globalProperties.$metaManager?.render();\r\n        await Promise.all(teleports.map((teleport) => renderToString(teleport, ctx)));\r\n    }\r\n    const { teleports } = ctx;\r\n    for (const target in teleports) {\r\n        if (target.endsWith('Attrs')) {\r\n            const str = teleports[target];\r\n            // match from first space to first >, these should be all rendered attributes\r\n            teleports[target] = str.slice(str.indexOf(' ') + 1, str.indexOf('>'));\r\n        }\r\n    }\r\n    return ctx;\r\n}\n\nexport { renderMetaToString };\n"]}]}